<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Migration on Guy Abel</title>
    <link>/tags/migration/</link>
    <description>Recent content in Migration on Guy Abel</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-uk</language>
    <copyright>&amp;copy; 2018 &amp;middot; Selected posts also on &lt;a href=&#34;https://r-bloggers.com/&#34;&gt;R-bloggers&lt;/a&gt;</copyright>
    <lastBuildDate>Mon, 15 Oct 2018 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/migration/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Migrant Stock Chord Diagrams</title>
      <link>/post/migrant-stock-chord-digrams/</link>
      <pubDate>Mon, 15 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/migrant-stock-chord-digrams/</guid>
      <description>&lt;div id=&#34;background&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Background&lt;/h2&gt;
&lt;p&gt;During the last few months I have given some introductory talks on migration patterns in Asia and Europe. I had a couple of requests to share the animated chord diagrams that I produced for my slides for others to use in their teaching materials. I created the animations for bilateral migrant stocks in each region to give a quick indication of the relative sizes and changes in the links between each country. I thought I would put the copies in this post for anyone else who might want to use them.&lt;/p&gt;
&lt;p&gt;As in my previous post on &lt;a href=&#34;http://guyabel.com/post/animated-directional-chord-diagrams/&#34;&gt;animated chord diagrams&lt;/a&gt; I used the &lt;a href=&#34;https://cran.r-project.org/web/packages/circlize/index.html&#34;&gt;&lt;code&gt;circlize&lt;/code&gt;&lt;/a&gt; package to produce each chord diagrams for each frame of the animation and &lt;a href=&#34;https://cran.r-project.org/web/packages/tweenr/index.html&#34;&gt;&lt;code&gt;tweenr&lt;/code&gt;&lt;/a&gt; for the intermediate data and &lt;a href=&#34;https://cran.r-project.org/web/packages/magick/index.html&#34;&gt;&lt;code&gt;magick&lt;/code&gt;&lt;/a&gt; to produce the GIFs. The country flags were added using the &lt;code&gt;circos.raster()&lt;/code&gt; function in circlize.&lt;/p&gt;
&lt;p&gt;After first writing the code for Asia, I made a few tweaks to enable the creation of similar animations for Europe, Africa and the Americas (see below). The data are based on the 2017 revision of the United Nations DESA &lt;a href=&#34;http://www.un.org/en/development/desa/population/migration/data/estimates2/estimates17.shtml&#34;&gt;International Migrant Stock Data&lt;/a&gt;. The chords in the diagrams represent the connection between the places of birth (at the base of the chord) and places of residence (at the arrow head of the chord). The width of the chords at their base correspond to the size of the given migrant populations in millions. Chords are ordered relative to their size, with the largest migrant stocks plotted at the beginning of the country segments.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;asia&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Asia&lt;/h2&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/img/abel-asia-ani10.gif&#34; /&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;europe&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Europe&lt;/h2&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/img/abel-europe-ani10.gif&#34; /&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;africa&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Africa&lt;/h2&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/img/abel-africa-ani10.gif&#34; /&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;north-central-south-america-and-the-carribean&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;North, Central, South America and the Carribean&lt;/h2&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/img/abel-americas-ani10.gif&#34; /&gt;

&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>European Bilateral Migration Flows</title>
      <link>/post/european-bilateral-migration-flows/</link>
      <pubDate>Sat, 01 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/european-bilateral-migration-flows/</guid>
      <description>&lt;div id=&#34;background&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Background&lt;/h2&gt;
&lt;!-- https://twitter.com/jburnmurdoch/status/998971273773432833 --&gt;
&lt;!-- &lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Agreed. Generally I struggle with chord diagrams even when not animated.&lt;/p&gt;&amp;mdash; Mara Averick (@dataandme) &lt;a href=&#34;https://twitter.com/dataandme/status/991545526909890561?ref_src=twsrc%5Etfw&#34;&gt;May 2, 2018&lt;/a&gt;&lt;/blockquote&gt; --&gt;
&lt;!-- &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt; --&gt;
&lt;p&gt;library(tidyverse) library(eurostat) library(scales)&lt;/p&gt;
&lt;p&gt;d0 &amp;lt;- get_eurostat(id = “migr_imm5prv”) d1 &amp;lt;- get_eurostat(id = “migr_emi3nxt”)&lt;/p&gt;
&lt;p&gt;d2 &amp;lt;- d0 %&amp;gt;% filter(age == “TOTAL”, agedef == “COMPLET”, sex == “T”) %&amp;gt;% rename(orig = partner, dest = geo, recieve = values) %&amp;gt;% filter(orig %in% eu_countries&lt;span class=&#34;math inline&#34;&gt;\(code,  dest %in% eu_countries\)&lt;/span&gt;code) %&amp;gt;% select(orig, dest, time, recieve)&lt;/p&gt;
&lt;p&gt;d3 &amp;lt;- d1 %&amp;gt;% filter(age == “TOTAL”, agedef == “COMPLET”, sex == “T”) %&amp;gt;% rename(orig = geo, dest = partner, send = values) %&amp;gt;% filter(orig %in% eu_countries&lt;span class=&#34;math inline&#34;&gt;\(code,  dest %in% eu_countries\)&lt;/span&gt;code) %&amp;gt;% select(orig, dest, time, send)&lt;/p&gt;
&lt;p&gt;d4 &amp;lt;- left_join(d2, d3)&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;summary-stats&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;summary stats&lt;/h1&gt;
&lt;/div&gt;
&lt;div id=&#34;d5a---d4&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;d5a &amp;lt;- d4 %&amp;gt;%&lt;/h1&gt;
&lt;/div&gt;
&lt;div id=&#34;group_bytime&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;group_by(time) %&amp;gt;%&lt;/h1&gt;
&lt;/div&gt;
&lt;div id=&#34;summarisecor-correcieve-send-use-complete.obs&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;summarise(cor = cor(recieve, send, use = “complete.obs”),&lt;/h1&gt;
&lt;/div&gt;
&lt;div id=&#34;cor_log-corlog1precieve-log1psend-use-complete.obs&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;cor_log = cor(log1p(recieve), log1p(send), use = “complete.obs”),&lt;/h1&gt;
&lt;/div&gt;
&lt;div id=&#34;n_send-sumis.nasend&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;n_send = sum(!is.na(send)),&lt;/h1&gt;
&lt;/div&gt;
&lt;div id=&#34;n_recieve-sumis.narecieve&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;n_recieve = sum(!is.na(recieve)),&lt;/h1&gt;
&lt;/div&gt;
&lt;div id=&#34;n_pairs-sumis.narecieve-send&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;n_pairs = sum(!is.na(recieve + send)))&lt;/h1&gt;
&lt;/div&gt;
&lt;div id=&#34;section&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;div id=&#34;d5b---d4&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;d5b &amp;lt;- d4 %&amp;gt;%&lt;/h1&gt;
&lt;/div&gt;
&lt;div id=&#34;group_bytime-orig&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;group_by(time, orig) %&amp;gt;%&lt;/h1&gt;
&lt;/div&gt;
&lt;div id=&#34;summarisen_data-sumis.nasend&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;summarise(n_data = sum(!is.na(send))) %&amp;gt;%&lt;/h1&gt;
&lt;/div&gt;
&lt;div id=&#34;group_bytime-1&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;group_by(time) %&amp;gt;%&lt;/h1&gt;
&lt;/div&gt;
&lt;div id=&#34;summarisen-n_distinctorig&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;summarise(n = n_distinct(orig),&lt;/h1&gt;
&lt;/div&gt;
&lt;div id=&#34;report_send-sumn_data-0&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;report_send = sum(n_data &amp;gt; 0))&lt;/h1&gt;
&lt;/div&gt;
&lt;div id=&#34;section-1&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;div id=&#34;d5c---d4&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;d5c &amp;lt;- d4 %&amp;gt;%&lt;/h1&gt;
&lt;/div&gt;
&lt;div id=&#34;group_bytime-dest&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;group_by(time, dest) %&amp;gt;%&lt;/h1&gt;
&lt;/div&gt;
&lt;div id=&#34;summarisen_data-sumis.narecieve&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;summarise(n_data = sum(!is.na(recieve))) %&amp;gt;%&lt;/h1&gt;
&lt;/div&gt;
&lt;div id=&#34;group_bytime-2&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;group_by(time) %&amp;gt;%&lt;/h1&gt;
&lt;/div&gt;
&lt;div id=&#34;summarisereport_recieve-sumn_data-0&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;summarise(report_recieve = sum(n_data &amp;gt; 0))&lt;/h1&gt;
&lt;/div&gt;
&lt;div id=&#34;section-2&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;div id=&#34;d5---d5a&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;d5 &amp;lt;- d5a %&amp;gt;%&lt;/h1&gt;
&lt;/div&gt;
&lt;div id=&#34;left_joind5b&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;left_join(d5b) %&amp;gt;%&lt;/h1&gt;
&lt;/div&gt;
&lt;div id=&#34;left_joind5c&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;left_join(d5c)&lt;/h1&gt;
&lt;/div&gt;
&lt;div id=&#34;d5&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;d5&lt;/h1&gt;
&lt;p&gt;ggplot(data = d4 %&amp;gt;% mutate(post2008 = time &amp;gt; “2008-01-01”), mapping = aes(x = send, y = recieve, col = as.factor(time))) + geom_point(alpha = 0.25) + coord_trans(x = “log1p”, y = “log1p”) + facet_wrap(facets = “post2008”)&lt;/p&gt;
&lt;p&gt;library(circlize) library(tweenr)&lt;/p&gt;
&lt;div id=&#34;do-not-tween-data-where-not-double-reported-set-colour-to-transparent-and-use-image_morph.-then&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;do not tween data where not double reported… set colour to transparent and use image_morph. then&lt;/h3&gt;
&lt;/div&gt;
&lt;div id=&#34;in-second-stage-of-gif-show-differences-in-double-reported-using-tweened-data.&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;in second stage of gif show differences in double reported using tweened data.&lt;/h3&gt;
&lt;p&gt;d5 &amp;lt;- d4 %&amp;gt;% filter(time == unique(d4$time)[2]) %&amp;gt;% select(-time) %&amp;gt;% gather(key = “type”, value = “flow”, recieve:send) %&amp;gt;% mutate( corridor = paste(orig, dest, sep = &amp;quot; -&amp;gt; “), type = case_when( type ==”recieve&amp;quot; ~ 1, type == “send” ~ 2 ), ease = “linear” ) %&amp;gt;% select(corridor, type, flow, ease) %&amp;gt;% # replace_na(list(flow = 0)) %&amp;gt;% tween_elements(time = “type”, group = “corridor”, ease = “ease”, nframes = 50) %&amp;gt;% tbl_df() %&amp;gt;% separate(col = .group, into = c(“orig”, “dest”), sep = &amp;quot; -&amp;gt; “) %&amp;gt;% select(orig, dest, flow, everything()) %&amp;gt;% mutate(flow = flow/1e03)&lt;/p&gt;
&lt;p&gt;library(circlize) library(magrittr)&lt;/p&gt;
&lt;p&gt;c_max &amp;lt;- d5 %&amp;gt;% group_by(.frame) %&amp;gt;% complete(orig = unique(c(orig, dest)), dest = unique(c(orig, dest))) %&amp;gt;% # filter(orig == dest, .frame ==0) %&amp;gt;% replace_na(list(flow = 0)) %&amp;gt;% group_by(orig, .frame) %&amp;gt;% mutate(tot_out = sum(flow)) %&amp;gt;% group_by(dest, .frame) %&amp;gt;% mutate(tot_in = sum(flow)) %&amp;gt;% filter(orig == dest) %&amp;gt;% mutate(tot = tot_in + tot_out) %&amp;gt;% mutate(alpha2 = orig) %&amp;gt;% group_by(alpha2) %&amp;gt;% summarise(tot_max = max(tot)) %$% ‘names&amp;lt;-’(tot_max, alpha2)&lt;/p&gt;
&lt;p&gt;c_max&lt;/p&gt;
&lt;p&gt;eu_countries&lt;/p&gt;
&lt;p&gt;f = 49 circos.clear() par(mar = rep(0, 4), cex=1) circos.par(start.degree = 90, track.margin=c(-0.1, 0.1), gap.degree = 2, points.overflow.warning = FALSE)&lt;/p&gt;
&lt;p&gt;chordDiagram(x = filter(d5, .frame == f), directional = 1, # order = d1&lt;span class=&#34;math inline&#34;&gt;\(region,  # grid.col = d1\)&lt;/span&gt;col1, # annotationTrack = “grid”, transparency = 0.25, annotationTrackHeight = c(0.05, 0.1), direction.type = c(“diffHeight”, “arrows”), link.arr.type = “big.arrow”, diffHeight = -0.04, link.sort = TRUE, link.largest.ontop = TRUE, xmax = c_max)&lt;/p&gt;
&lt;p&gt;chordDiagram(d5 %&amp;gt;% filter(.frame == 0)) chordDiagram(d5 %&amp;gt;% filter(.frame == 50))&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>ARDI International Migration Pillar</title>
      <link>/project/adri-pillar/</link>
      <pubDate>Thu, 01 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/project/adri-pillar/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Combining Migration Data</title>
      <link>/project/combining-migration-data/</link>
      <pubDate>Thu, 01 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/project/combining-migration-data/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Global Migration Predictions</title>
      <link>/project/global-migration-prediction/</link>
      <pubDate>Thu, 01 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/project/global-migration-prediction/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
