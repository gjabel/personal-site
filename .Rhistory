xlim = get.cell.meta.data("xlim")
sector.index = get.cell.meta.data("sector.index")
reg1 = d1 %>% filter(region == sector.index) %>% pull(reg1)
reg2 = d1 %>% filter(region == sector.index) %>% pull(reg2)
circos.text(x = mean(xlim), y = ifelse(is.na(reg2), 3, 4), labels = reg1, facing = "bending", cex = 1.1)
circos.text(x = mean(xlim), y = 2.5, labels = reg2, facing = "bending", cex = 1.1)
circos.axis(h = "top",  labels.cex = 0.8, labels.away.percentage = 0.2, minor.ticks = 1,
major.at = seq(from = 0, to = xlim[2], by = ifelse(xlim[2]>15, 4, 2)),
labels.pos.adjust = FALSE, labels.niceFacing = FALSE)
})
# dev.off()
# file.show(paste0("./plot-gif1/cf",f,".png"))
y <- filter(d2, .frame == f)$year0[1]
y <- round(y/5)*5
p <- paste(y, y+5, sep = "-")
text(-1.08,0.97, paste0("Global Migration\n",p), pos=4, cex = 1.5)
text(-1.08,0.81,
"Estimates of Global Bilateral\nMigration Flows by Gender\nbetween 1960 and 2015.\ndoi.org/10.1111/imre.12327",
pos=4, cex = 0.55, col = "dimgrey")
text(1.08,1.01,
paste(d4 %>% filter(year0 == y) %>% pull(flow), "million"),
pos=2, cex = 1.5)
text(1.08,0.93,
"Estimated minimum global migrant\ntransition flows over five-year period",
pos=2, cex = 0.55, col = "dimgrey")
text(1.08,0.75, "@guyabelguyabel", pos=2, cex = 0.55, col = "dimgrey")
message(p)
d4 <- d4 %>%
mutate(col = ifelse(year0 == y, "black", "transparent"))
op <- par(fig = c(0.8,0.99,0.86,0.91), mar=rep(0.15,4), xpd=TRUE, new = TRUE)
plot(x = 1:11, y = d4$flow, pch = -1, axes = FALSE)
lines(d4$flow, lwd  = 2, col = "dimgrey")
points(d4$flow, pch = 20, cex = 1.5, col = d4$col)
par(op)
dev.off()
# dev.print(png, file = paste0("./plot_gif/cf",f,".png"), height=7, width=7, units = "in", res = 800)
# file.show(paste0("./plot-gif2/cf",f,".png"))
}
img0 <- image_read(paste0("./plot-gif2/cf",0,".png"))
for(y in unique(d2$.frame)[-1]){
img1 <- image_read(paste0("./plot-gif2/cf",y,".png"))
img0 <- c(img0, img1)
message(y)
}
img2 <- image_scale(img0, "800x800")
ani0 <- image_animate(img2, fps = 5)
image_write(ani0, "./plot-gif2/gf.gif")
file.show("./plot-gif2/gf.gif")
library(blogdown)
build_site()
serve_site()
build_site()
serve_site()
5/20
1.25/5
build_site()
build_site()
build_site()
serve_site()
build_site()
build_site()
build_site()
build_site()
serve_site()
build_site()
serve_site()
build_site()
build_site()
serve_site()
build_site()
serve_site()
build_site()
library(migest)
?`migest-package`
build_site()
build_site()
serve_site()
build_site()
serve_site()
build_site()
serve_site()
build_site()
build_site()
serve_site()
build_site()
serve_site()
library(blogdown)
build_site()
serve_site()
build_site()
serve_site()
library(rvest)
?read_html
library(blogdown)
build_site()
serve_site()
build_site()
serve_site()
knitr::opts_chunk$set(echo = TRUE)
load(./img/england-kits.RData)
load("./img/england-kits.RData")
getwd()
load("./static/img/england-kits.RData")
load("./england-kits.RData")
list.files()
load("england-kits.RData")
load(file = "england-kits.RData")
list.files()
getwd()
load(file = "england-kits.RData")
d1
head(d1)
build_site()
serve_site()
build_site()
build_site()
build_site()
serve_site()
library(blogdown)
build_
build_site()
library(blogdown)
serve_site()
build_site()
library(blogdown)
build_site()
serve_site()
library(blogdown)
serve_site()
build_site()
library(blogdown)
build_site()
serve_site()
library(blogdown)
install.packages("blogdown")
library(blogdown)
build_site()
install.packages('migest')
build_site()
build_site()
build_site()
serve_site()
build_site()
serve_site()
library(blogdown)
build_site()
build_site()
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
library(blogdown)
build_site()
serve_site()
library(blogdown)
serve_site()
library(RSelenium)
?remoteDriver
? warnErrList
library(blogdown)
build_site()
serve_site()
build_site()
serve_site()
library(blogdown)
build_site()
build_site()
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
library(blogdown)
build_site()
serve_site()
build_site()
serve_site()
serve_site()
library(blogdown)
serve_site()
servr::daemon_stop(1)
serve_site()
servr::daemon_stop(2)
serve_site()
servr::daemon_stop(3)
servr::daemon_stop(4)
servr::daemon_stop(2)
servr::daemon_stop(1)
serve_site()
servr::daemon_stop(4)
serve_site()
library(blogdown)
serve_site()
build_site()
serve_site()
library(blogdown)
serve_site()
unlink('~/Library/Application Support/Hugo', recursive = TRUE)
blogdown::install_hugo(force=TRUE, extended=TRUE)
unlink('~/Library/Application Support/Hugo', recursive = TRUE)
blogdown::install_hugo(force=TRUE, extended=TRUE)
serve_site()
serve_site()
library(blogdown)
serve_site()
servr::daemon_stop(1)
servr::daemon_stop(1)
servr::daemon_stop(1)
servr::daemon_stop(1)
servr::daemon_stop(1)
blogdown::install_hugo(force=TRUE, extended=TRUE)
build_site()
serve_site()
serve_site()
library(blogdown)
serve_site()
library(blogdown)
build_site()
serve_site()
build_site()
serve_site()
install_hugo()
h = readLines("https://github.com/gohugoio/hugo/releases/latest", warn = FALSE)
str(h)
install_hugo()
h = readLines("https://github.com/gohugoio/hugo/releases/latest", warn = FALSE)
str(h)
install_hugo(version = 0.55)
install_hugo(version = 0.55)
install_hugo(version = 0.55)
install_hugo()
install_hugo(version = 0.55)
install_hugo(version = 0.55)
install_hugo()
remotes::install_github('rstudio/blogdown')
devtools::install_github('rstudio/blogdown')
devtools::install_github('rstudio/blogdown')
install.packages(c("bookdown", "cowplot", "devtools", "digest", "ellipsis", "hms", "raster", "rayshader", "RcppArmadillo", "rgl", "rmarkdown", "sf", "vctrs", "zip"))
install.packages(c("bookdown", "cowplot", "devtools", "digest", "ellipsis", "hms", "raster", "rayshader", "RcppArmadillo", "rgl", "rmarkdown", "sf", "vctrs", "zip"))
install.packages(c("bookdown", "cowplot", "devtools", "digest", "ellipsis", "hms", "raster", "rayshader", "RcppArmadillo", "rgl", "rmarkdown", "sf", "vctrs", "zip"))
install.packages(c("bookdown", "cowplot", "devtools", "digest", "ellipsis", "hms", "raster", "rayshader", "RcppArmadillo", "rgl", "rmarkdown", "sf", "vctrs", "zip"))
install.packages(c("bookdown", "cowplot", "devtools", "digest", "ellipsis", "hms", "raster", "rayshader", "RcppArmadillo", "rgl", "rmarkdown", "sf", "vctrs", "zip"))
install.packages(c("bookdown", "cowplot", "devtools", "digest", "ellipsis", "hms", "raster", "rayshader", "RcppArmadillo", "rgl", "rmarkdown", "sf", "vctrs", "zip"))
install.packages(c("bookdown", "cowplot", "devtools", "digest", "ellipsis", "hms", "raster", "rayshader", "RcppArmadillo", "rgl", "rmarkdown", "sf", "vctrs", "zip"))
install.packages(c("bookdown", "cowplot", "devtools", "digest", "ellipsis", "hms", "raster", "rayshader", "RcppArmadillo", "rgl", "rmarkdown", "sf", "vctrs", "zip"))
install.packages(c("bookdown", "cowplot", "devtools", "digest", "ellipsis", "hms", "raster", "rayshader", "RcppArmadillo", "rgl", "rmarkdown", "sf", "vctrs", "zip"))
install.packages(c("bookdown", "cowplot", "devtools", "digest", "ellipsis", "hms", "raster", "rayshader", "RcppArmadillo", "rgl", "rmarkdown", "sf", "vctrs", "zip"))
install.packages(c("bookdown", "cowplot", "devtools", "digest", "ellipsis", "hms", "raster", "rayshader", "RcppArmadillo", "rgl", "rmarkdown", "sf", "vctrs", "zip"))
blogdown::hugo_version()
library()
library(blogdown)
build_site()
serve_site()
build_site()
serve_site()
build_site()
serve_site()
build_site()
build_site()
build_site()
serve_site()
knitr::opts_chunk$set(echo = TRUE)
load("sd.Rdata")
install.packages("DT")
library(DT)
?DT
datatable(d0)
?datatable
library(DT)
library(tidyverse)
d0 %>%
set_names(nm = str_to_title(names(.)))
d0 %>%
set_names(nm = str_to_title(names(.)))
rename(WPP = 1,
`Net (Previous WPP)` = 5,
Revision = 6)
d0 %>%
set_names(nm = str_to_title(names(.))) %>%
rename(WPP = 1,
`Net (Previous WPP)` = 5,
Revision = 6)
d0 %>%
set_names(str_to_title(names(.)))
d0 %>%
set_names(str_to_title(names(.))) %>%
rename(WPP = 1,
`Net (Previous WPP)` = 5,
Revision = 6)
d0 %>%
set_names(str_to_title(names(.))) %>%
rename(WPP = 1)
d0 %>%
set_names(str_to_title(names(.))) %>%
rename(1  = WPP)
d0 %>%
set_names(str_to_title(names(.))) %>%
rename(1 = "WPP")
d0 %>%
set_names(str_to_title(names(.))) %>%
rename("WPP" = 1)
d0 %>%
set_names(str_to_title(names(.)))
d0 %>%
# set_names(str_to_title(names(.))) %>%
rename("WPP" = 1)
d0 %>%
# set_names(str_to_title(names(.))) %>%
rename("WPP" = 1,
"Period" = 2,
"Country Name" = 3,
"Net Migration (m)" = 4,
"Net Migration, Previous WPP" = 5,
"Revision" = 6)
d0 %>%
rename("WPP" = 1,
"Period" = 2,
"Country Name" = 3,
"Net Migration (m)" = 4,
"Net Migration, Previous WPP" = 5,
"Revision" = 6) %>%
datatable()
anscombe_tidy %>%
datatable(rownames = FALSE,
options = list(
pageLength = 11,
autoWidth = TRUE,
columnDefs = list(list(
className = 'dt-left',
targets = 0),
list(className = 'dt-center', targets = 1))))
install.packages("plotly")
library(plotly)
anscombe_tidy %>%
datatable(rownames = FALSE,
options = list(
pageLength = 11,
autoWidth = TRUE,
columnDefs = list(list(
className = 'dt-left',
targets = 0),
list(className = 'dt-center', targets = 1))))
anscombe_tidy <- anscombe %>%
mutate(observation = seq_along(x1)) %>%
gather(key, value, -observation) %>%
separate(key, c("variable", "set"), 1, convert = TRUE) %>%
mutate(set = as.character(as.roman(set))) %>%
spread(variable, value) %>%
arrange(set)
head(anscombe_tidy)
anscombe_tidy %>%
datatable(rownames = FALSE,
options = list(
pageLength = 11,
autoWidth = TRUE,
columnDefs = list(list(
className = 'dt-left',
targets = 0),
list(className = 'dt-center', targets = 1))))
?anscombe
build_site()
install.packages("widgetframe")
install.packages("emo")
install.packages("emo")
?datatable
?datatable
d1 <- d0 %>%
rename("WPP" = 1,
"Period" = 2,
"Country Name" = 3,
"Net Migration (millions)" = 4,
"Net Migration, Previous WPP" = 5,
"Revision" = 6) %>%
datatable(options = list(
initComplete = JS(
"function(settings, json) {",
"$('body').css({'font-family': 'Calibri'});",
"}"
))
)
widgetframe::frameWidget(d1)
d1
d0 %>%
rename("WPP" = 1,
"Period" = 2,
"Country Name" = 3,
"Net Migration (millions)" = 4,
"Net Migration, Previous WPP" = 5,
"Revision" = 6)
d1 %>% mutate_at(is.numeric, round(.,3))
d1 %>% mutate_at(is.numeric, round(.,2))
d1 %>% mutate_at(is.numeric, funs(round(.,2)))
?mutate_at
d1 %>% mutate_if(is.numeric, funs(round(.,2)))
d1 %>% mutate_if(is.numeric, round(.,2))
d0 %>% mutate_if(is.numeric, round(.,2))
d1 <- d0 %>%
ungroup() %>%
rename("WPP" = 1,
"Period" = 2,
"Country Name" = 3,
"Net Migration (millions)" = 4,
"Net Migration, Previous WPP" = 5,
"Revision" = 6) %>%
datatable()
d0
d1
d0 %>% ungroup() %>% mutate_if(is.numeric, round(.,2))
d0 %>% ungroup() %>% mutate_if(is.numeric, round(2))
d0 %>% ungroup() %>% mutate_if(is.numeric, log
)
d0 %>% ungroup() %>% mutate_if(is.numeric, round)
d0 %>% ungroup() %>% mutate_if(is.numeric, round(., 2))
d0 %>% ungroup() %>% mutate_if(is.numeric, round(.))
d0 %>% ungroup() %>% mutate_if(is.numeric, funs(round(.)))
d0 %>% ungroup() %>% mutate_if(is.numeric, ~ funs(~ round(. , digits = 2)))
d0 %>% ungroup() %>% mutate_if(is.numeric, ~ round(. , digits = 2))
?frameWidget
d1 <- d0 %>%
ungroup() %>%
mutate_if(is.numeric, ~ round(. , digits = 2)) %>%
rename("WPP" = 1,
"Period" = 2,
"Country Name" = 3,
"Net Migration (millions)" = 4,
"Net Migration, Previous WPP" = 5,
"Revision" = 6) %>%
datatable(options = list(
initComplete = JS(
"function(settings, json) {",
"$('body').css({'font-family': 'Calibri'});",
"}"
))) %>%
formatRound(columns=3:6, digits=3)
widgetframe::frameWidget(d1, height = "100%")
build_site()
build_site()
build_site()
serve_site()
library(blogdown)
build_site()
?blogdown
update_hugo()
build_site()
build_site()
install_theme(theme = "gcushen/hugo-academic", force = TRUE)
install_theme(theme = "gcushen/hugo-academic", force = TRUE)
library(blogdown)
build_site()
serve_site()
serve_site()
knitr::opts_chunk$set(echo = TRUE)
load("sd2.Rdata")
d2
d3 <- d2 %>%
ungroup() %>%
mutate_if(is.numeric, ~ round(. , digits = 2)) %>%
rename("Year" = 1,
"Place of Birth" = 2,
"Place of Residence" = 3,
"IMS2017" = 4,
"IMS2019" = 5,
"Revision (Absolute)" = 6) %>%
datatable(options = list(
initComplete = JS(
"function(settings, json) {",
"$('body').css({'font-family': 'Calibri'});",
"}"
))) %>%
formatRound(columns=4:6, digits=0)
serve_site()
library(tidyverse)
d3 <- d2 %>%
ungroup() %>%
mutate_if(is.numeric, ~ round(. , digits = 2)) %>%
rename("Year" = 1,
"Place of Birth" = 2,
"Place of Residence" = 3,
"IMS2017" = 4,
"IMS2019" = 5,
"Revision (Absolute)" = 6) %>%
datatable(options = list(
initComplete = JS(
"function(settings, json) {",
"$('body').css({'font-family': 'Calibri'});",
"}"
))) %>%
formatRound(columns=4:6, digits=0)
library(DT)
load("sd2.Rdata")
d3 <- d2 %>%
ungroup() %>%
mutate_if(is.numeric, ~ round(. , digits = 2)) %>%
rename("Year" = 1,
"Place of Birth" = 2,
"Place of Residence" = 3,
"IMS2017" = 4,
"IMS2019" = 5,
"Revision (Absolute)" = 6) %>%
datatable(options = list(
initComplete = JS(
"function(settings, json) {",
"$('body').css({'font-family': 'Calibri'});",
"}"
))) %>%
formatRound(columns=4:6, digits=0)
d3
build_site()
serve_site()
